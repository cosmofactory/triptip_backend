[tool.poetry]
name = "triptip-backend"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
{ include = "src" },
{ include = "tests" },
]


[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
ruff = "^0.3.4"
pydantic-settings = "^2.2.1"
sqlalchemy = "^2.0.29"
asyncpg = "^0.29.0"
alembic = "^1.13.1"
gunicorn = "^21.2.0"
pre-commit = "^3.7.0"
pytest = "^8.1.1"
pytest-asyncio = "^0.23.6"
httpx = "^0.27.0"
pytest-cov = "^5.0.0"
coverage = "^7.4.4"
factory-boy = "^3.3.0"
itsdangerous = "^2.2.0"
pydantic = {extras = ["email"], version = "^2.7.1"}
bcrypt = "^4.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
python-multipart = "^0.0.9"
sentry-sdk = {extras = ["fastapi"], version = "^2.8.0"}
aiosqlite = "^0.20.0"
sqladmin = "^0.17.0"
logfire = {extras = ["system-metrics"], version = "^0.50.1"}
opentelemetry-instrumentation-httpx = "^0.47b0"
opentelemetry-instrumentation-jinja2 = "^0.47b0"
opentelemetry-instrumentation-asyncpg = "^0.47b0"
opentelemetry-instrumentation-urllib = "^0.47b0"
opentelemetry-instrumentation-sqlite3 = "^0.47b0"
opentelemetry-instrumentation-urllib3 = "^0.47b0"
opentelemetry-instrumentation-fastapi = "^0.47b0"
opentelemetry-instrumentation-sqlalchemy = "^0.47b0"
opentelemetry-instrumentation-requests = "^0.47b0"
aioboto3 = "^13.1.1"
moto = "^5.0.16"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["I", "W", "B", "I",]
exclude = ["src/migrations/*.py",]

[tool.flake8]
max-line-length = 100
ignore = ["B008"]
exclude = ["src/migrations/*.py",]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
asyncio_mode = "auto"
python_files = ["*_test.py", "*_tests.py", "test_*.py"]
addopts = "-vv -p no:cacheprovider"

[tool.ruff.lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.logfire]
pydantic_plugin_record = "all"