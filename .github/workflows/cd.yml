name: Deploy to Remote Server
on:
  workflow_run:
    workflows: ['CI']
    types:
      - completed
    branches:
      - dev

jobs:
  build:
    name: Build and push to Docker Hub
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_LOGIN }}/triptip_backend:latest

  deploy:
    name: Deploy to Remote Server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Upload Docker Compose File and Migration Script
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "deploy-compose.yaml, src/migrations/"
          target: "/root/triptip_backend"

      - name: Executing remote ssh to deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /root/triptip_backend
            sudo docker compose -f deploy-compose.yaml down
            rm .env
            touch .env
            echo MODE=DEV >> .env
            echo DB_HOST=${{ secrets.POSTGRES_HOST }} >> .env
            echo DB_PORT=${{ secrets.POSTGRES_PORT }} >> .env
            echo DB_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo DB_PASS=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_NAME=${{ secrets.POSTGRES_DB }} >> .env
            echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
            echo ALGORITHM=${{ secrets.ALGORITHM }} >> .env
            echo ACCESS_TOKEN_EXPIRE_MINUTES=${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }} >> .env
            echo REFRESH_TOKEN_EXPIRE_DAYS=${{ secrets.REFRESH_TOKEN_EXPIRE_DAYS }} >> .env
            echo SENTRY_KEY=${{ secrets.SENTRY_KEY }} >> .env
            echo LOGFIRE_TOKEN=${{ secrets.LOGFIRE_TOKEN }} >> .env
            echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
            echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
            echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env
            echo SERVICE_NAME=triptip >> .env

            sudo docker compose -f deploy-compose.yaml pull
            sudo docker compose -f deploy-compose.yaml build --no-cache
            sudo docker compose -f deploy-compose.yaml up -d
